# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!

   
        
    - name: Setup PostgreSQL
      uses: Harmon758/postgresql-action@v1.0.0
      with:
        # Version of PostgreSQL to use
        postgresql version: 11
        # POSTGRES_DB - name for the default database that is created
        postgresql db: mydb
        # POSTGRES_USER - create the specified user with superuser power
        #postgresql user: vlad
        # POSTGRES_PASSWORD - superuser password
        #postgresql password: popil
        
    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
        
        #Set the value of variable
        database="mydb"

        #Execute few psql commands: 
        #Note: you can also add -h hostname -U username in the below commands. 

        psql -d $database -c "CREATE TABLE public.tbl_students(rno integer, name character varying)"
        psql -d $database -c "INSERT INTO public.tbl_students VALUES (1,'Anvesh'),(2,'Neevan'),(3,'Roy'),(4,'Martin'),(5,'Jenny')"
        psql -d $database -c "SELECT *FROM public.tbl_students"

        #Assign table count to variable
        TableCount=$(psql -d $database -t -c "select count(1) from public.tbl_students")

        #Print the value of variable
        echo "Total table records count....:"$TableCount
